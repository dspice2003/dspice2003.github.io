# raspberry pi 12/14/2018

This week we completed hw8.py. During this week we installed putty, putty is a program that uses linux to print the program. We are
using the raspberry pi to display the program. We are going to make a project on the pi. The project is going to be an aquarem
with a fish in it. We are working on making the program drop food when we shake it. We are also going to add other fish to the
aquariem. When the fish eat they are going to get bigger if a fish is one pixel if it eats it will be four pixels. The aquariem will
be blue, we will also add other fish and when they eat the other fish its game over. When the food sits to long it will decay.

---

# gofish 12/7/2018

This week we learned more about how classes work when you put more classes in it. we also created gofish this python program
will play goldfish with opponents. The rules are " each person starts with 4 cards or if their are more that 4 people
you start with 5 cards". "If an opponent calls your card you give up that card, if they dont you say goldfish and they
pick a card. The person who has the most pairs of cards will win. For this to work we need to import deck and import
player. we also need to say how many people are playing we also created setup and playgame in goldfish.py. During this week
we also created hw8.py for that homework we need to create a dice game.

---

# classes continued 11/30/2018

This week we learned more about classes. We also created deck,card,rank,suit. Rank.py creates class rank.py this has multiple
variables. We also created suit.py, suit creates the class suit this has multiple variables. Deck creates a class called deck
in this class it creates draw,shuffle,restock,cut,split and fan. Draw means it removes a card, shuffle means you import random.
Def restock means restore all cards. Def cut will split the deck in the first_half and second_half, then it will set deck1 to
first_half and deck2 to second_half. Def split means you split the list in half. Def fan will display all the cards. This week
we also looked at hw8.py.

---

# classes 11/16/2018

This week we learned more about recursion. We also went to the coffee house in delafield, during their we talked about out homework
we also got code and learned how to work it. During this week we learned about classes, classes are series of code that you make
what we did was we made code in the class then when you print the class it will print the code that is in that class. We created
irrational.py this will print the class irrational, this program will print pi closer and closer every time you increase the
number. During this week we also learned that recursion can go into recursion.

---

# recursion 11/9/2018

This week we learned more about functions. We also started learning about recursion, recursion is the process of repeating its self
this is usefull when coding large amounts of code. This week I also got 100% on my hw6.py. On visual studio code I created
recursion.py, In that program we created "simple_bunny_ears" and "complex_bunny_ears". Simple bunny ears prints as many bunnies
as you want and it adds 2 ears for each bunny then subtracts 1 bunny each time. Complex bunny ears is the same thing exept every
other bunny raises his or her leg for a hand, so for every other bunny it will add 3 and subtract the bunny. This week I also
created merge.py this program splits "items" in half then at the end it will print both items "left" and "right" into one big list.

---

# fuctions 11/2/2018

This week we learned more about how to take info out of a dictionary. We learned about functions. A function is code that only
works when you call its name or if you are in the function. How to code a function you first need to create "def (function name)
", now if you call that function it will print that code. This week we created unique.py, this program will ask the user
to print numbers seperated by a coma, then it will put the numbers in order if not already. This week we started hw6.py.
In hw6 there is 3 problems you need to solve. The first problem is you need to swap "a" and "b", In this problem a = 10
and b = 30 when you switch them a = 30 and b = 10. Problem 2 uses a function called "bubble". You create a list and 
it will use the function "bubble" to sort them in order. In problem 3 you create a function called "bubble_sort", in this
function you will continue to loop the list you created in problem 2. It will run until the list is in order.

---

# while and scope 10/26/2018

This week we learned about more while programs. The while command will run the program forever until you tell it to break.
During this week I finished my hw5.py. The homework was you create a dice game, two people play the game. You ask them for there
name, and you print with that name, then you roll the dice using the random.randint function. Who ever has the biggest number will
will that game, after each roll we use dictionarys to add the points up. Then you ask the users if they want to play again. If both
the answers are yes you play again. I also took my dictionary quiz and my for loops quiz. For the for loop quiz you need to use the
for loop function and print the numbers. Then you add all numbers and exclude all divisble by seven.

---

# dictionarys 10/19/2018

This week we learned more about loops and for loops. I finished hw4.py I also started on hw5.py. During this week we read about
dictionarys on page 26,27. During this week we had a test on for loops. The program would ask the user to print numbers out
with spaces between. It would then add the numbers up then it would find the largest number in the list of numbers they printed.
.In this week we created dictionary.py this program asked the user to print a word, the program would split the word. Then we
programmed the file to print how many times that letter printed in the program. This week we created a program that asked the 
user to roll the dice, this is a two player game. Then the program would ask player two to roll the dice. Then the program would
see who had the highest number, we used dictionarys to add the points up, who ever had two points first won the game.

---

# for loops 10/12/2018

This week I learned more about loops. A loop makes the indented lines loop over till true, this is usefull for programming multiple 
times and not having to write more code. This week we created strong.py that program will use for loops. The user types a number in
the program will breakdown that number using the for loops.  It will break it down into numbers that add up to the number.
The program will tell the user if it is a strong number, for example 145 is a strong number, the program prints 1 24 120. That
adds up to 145. we also created wicked_count.py. This program will ask the user for 5 numbers with a space inbetween them.
Then it will go threw the numbers and if one of the numbers is a lucky number it adds points. If the number is unlucky it will
subtract 20 points from your total. then at the end it prints the numbers. We also created fox.py this program will print the
line "the quick brown fox jumped over the lazy dog" after its done it will split the line and pritn each word at a diffrent time.
After we learned how to do that we learned how to reverce the letters so it saids it backwards but still line for line. We also
created words.py this program will ask the user to print a sentence. After the user does so it will print the sentence and make it
a list to print later.

---

#   loops part 1 10/5/2018

This week I learned more about lists, and how they work. I mostly completed my hw3.py. This week we learned about the command 
sentence.split, that command will split the words and print one letter at a time. we learned more about the .append command
that command adds somthing to a list. You can also name a list and print that list, or you can make variables and add them to a list
and call that list somthing else. This week we learned about the command "for". That command can individualy name a item in a list 
and call it somthing else, for example yesterday we worte a problem on the board. We typed "For x in words" print(x). That displays 
the lists individualy print them.

---

# lists 9/27/2018

This week I learned more about lists. I learned how to make a list with an if statment and a input with it. I also read chapters 14,15,16.
This week I also turned in my homework in. I learned more about if statments and elif. I started my hw3.py homework. I made variables
and added them to a list. I created guess.py that program makes the user guess the number 2 times, till you find the number. I also
created bucket.py which creates a todo list and prints the lists. I created words.py which asks the user to create a sentence once the
user creates a sentence and tells the user if the sentence is a integer or a string.

---

# conditionals 9/21/2018

This week we turned in our homework. I learned how to add if statments and add other statments. We learned how to add
if statments inside other if statments. I created guess.py that program makes the user pick a number, if it matches
they win. I finished my first problem on my homework. I learned how to create a random number using random.randint(1,100).
I read pages 9,12,13 which talked about if statment and how to add more inside a if statment. I learned how to create "True" and "False"
equations. I also had a quiz that had statments that were wrong and got 100%.

---

# Variables, expressions 9/14/2018

During this week I learned how to create variables and how to print them. I also learned about expressions and how to use variables
in the expressions. With variables I learned how to create more than one variable. When I learned how to create expressions I also
learned how to use the command "input". The command means the user types and that creates a variable so you can print. With that it
helped with my problem 2 homework.

---

# Intro 9/7/2018

During this week I learned more about github, we also got a programing book that shows us the basics of programming, in that book I learned
how to create a list also how to add and delete lists. In this week we set up our computers for programming, we installed Visual Studio
Code and Python 3.7. We learned how to print "Hello World!" and how to create strings.

---
